import React from 'react'
import { ColumnVisibility } from '@/types/book'
import Button from '@/components/ui/Button'
import { EyeIcon, EyeSlashIcon, XMarkIcon } from '@heroicons/react/24/outline'

/**
 * –ü—Ä–æ–ø—Å—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ ColumnToggle
 */
interface ColumnToggleProps {
  visibility: ColumnVisibility
  onChange: (visibility: ColumnVisibility) => void
  onClose: () => void
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç—å—é –∫–æ–ª–æ–Ω–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
 * 
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å/—Å–∫—Ä—ã–≤–∞—Ç—å –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ –∫–Ω–∏–≥.
 */
const ColumnToggle: React.FC<ColumnToggleProps> = ({
  visibility,
  onChange,
  onClose
}) => {
  /**
   * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∫–æ–ª–æ–Ω–∫–∏
   */
  const toggleColumn = (column: keyof ColumnVisibility) => {
    onChange({
      ...visibility,
      [column]: !visibility[column]
    })
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–ª–æ–Ω–∫–∏
   */
  const showAll = () => {
    onChange({
      title: true,
      author: true,
      genre: true,
      publishingHouse: true,
      year: true,
      isbn: true
    })
  }

  /**
   * –°–∫—Ä—ã—Ç—å –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏ (–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ)
   */
  const showMinimal = () => {
    onChange({
      title: true,
      author: true,
      genre: false,
      publishingHouse: false,
      year: false,
      isbn: false
    })
  }

  /**
   * –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫–æ–ª–æ–Ω–æ–∫
   */
  const columns = [
    { key: 'title' as const, label: '–ù–∞–∑–≤–∞–Ω–∏–µ', required: true },
    { key: 'author' as const, label: '–ê–≤—Ç–æ—Ä', required: true },
    { key: 'genre' as const, label: '–ñ–∞–Ω—Ä', required: false },
    { key: 'publishingHouse' as const, label: '–ò–∑–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ', required: false },
    { key: 'year' as const, label: '–ì–æ–¥ –∏–∑–¥–∞–Ω–∏—è', required: false },
    { key: 'isbn' as const, label: 'ISBN', required: false }
  ]

  return (
    <div className="space-y-4">
      <div className="flex items-center justify-between">
        <h3 className="text-lg font-medium text-gray-900">
          –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–ª–æ–Ω–æ–∫
        </h3>
        <button
          onClick={onClose}
          className="text-gray-400 hover:text-gray-600 transition-colors"
        >
          <XMarkIcon className="h-5 w-5" />
        </button>
      </div>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <div className="flex flex-wrap gap-2">
        <Button
          variant="outline"
          size="sm"
          onClick={showAll}
        >
          –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ
        </Button>
        <Button
          variant="outline"
          size="sm"
          onClick={showMinimal}
        >
          –¢–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ
        </Button>
      </div>

      {/* –°–ø–∏—Å–æ–∫ –∫–æ–ª–æ–Ω–æ–∫ */}
      <div className="space-y-3">
        {columns.map((column) => (
          <div
            key={column.key}
            className="flex items-center justify-between p-3 bg-gray-50 rounded-lg"
          >
            <div className="flex items-center space-x-3">
              <button
                onClick={() => !column.required && toggleColumn(column.key)}
                disabled={column.required}
                className={`flex items-center justify-center w-5 h-5 rounded transition-colors ${
                  visibility[column.key]
                    ? 'text-primary-600 bg-primary-100'
                    : 'text-gray-400 bg-gray-200'
                } ${column.required ? 'cursor-not-allowed opacity-50' : 'cursor-pointer hover:bg-primary-200'}`}
              >
                {visibility[column.key] ? (
                  <EyeIcon className="w-3 h-3" />
                ) : (
                  <EyeSlashIcon className="w-3 h-3" />
                )}
              </button>

              <div>
                <span className="text-sm font-medium text-gray-900">
                  {column.label}
                </span>
                {column.required && (
                  <span className="ml-2 text-xs text-gray-500">
                    (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è)
                  </span>
                )}
              </div>
            </div>

            <div className="text-sm text-gray-500">
              {visibility[column.key] ? '–í–∏–¥–∏–º–∞—è' : '–°–∫—Ä—ã—Ç–∞—è'}
            </div>
          </div>
        ))}
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="text-sm text-gray-600 bg-blue-50 p-3 rounded-lg">
        <p>
          üí° <strong>–°–æ–≤–µ—Ç:</strong> –°–∫—Ä–æ–π—Ç–µ –Ω–µ–Ω—É–∂–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –±–æ–ª–µ–µ —É–¥–æ–±–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö.
          –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
        </p>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="flex justify-between text-sm text-gray-500 pt-2 border-t border-gray-200">
        <span>
          –í–∏–¥–∏–º—ã—Ö –∫–æ–ª–æ–Ω–æ–∫: {Object.values(visibility).filter(Boolean).length} –∏–∑ {columns.length}
        </span>
        <span>
          –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö: {columns.filter(c => c.required).length}
        </span>
      </div>
    </div>
  )
}

export default ColumnToggle